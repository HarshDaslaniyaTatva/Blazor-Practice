@* EditProductModal.razor *@
<div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProductModalLabel">Edit Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <EditForm Model="EditProduct" OnValidSubmit="HandleEditProduct">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="mb-3">
                        <label for="name" class="form-label">Name</label>
                        <InputText id="name" class="form-control" @bind-Value="EditProduct.Name" />
                        <ValidationMessage For="() => EditProduct.Name" />
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <InputTextArea id="description" class="form-control" @bind-Value="EditProduct.Description" />
                        <ValidationMessage For="() => EditProduct.Description" />
                    </div>
                    <div class="mb-3">
                        <label for="price" class="form-label">Price</label>
                        <InputNumber id="price" class="form-control" @bind-Value="EditProduct.Price" />
                        <ValidationMessage For="() => EditProduct.Price" />
                    </div>
                    <div class="mb-3">
                        <label for="stockQuantity" class="form-label">Stock Quantity</label>
                        <InputNumber id="stockQuantity" class="form-control" @bind-Value="EditProduct.StockQuantity" />
                        <ValidationMessage For="() => EditProduct.StockQuantity" />
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public GetProductDtos EditProduct { get; set; }

    private async Task HandleEditProduct()
    {
        var response = await productService.UpdateProduct(EditProduct.ProductId, EditProduct);
        if (response.Success)
        {
            // Trigger any parent component action or event to reload data
        }
        else
        {
            Console.WriteLine(response.Message);
        }
    }
}


@page "/Product"
@using BlazorWebApp.Dtos
@inject IProductService productService
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Forms
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
@* @attribute [Authorize(Roles = "Admin")] *@
<AuthorizeView Roles="Admin">
    <Authorized>
        <h3>Products</h3>
        <div class="text-end my-3">
            <button class="btn btn-primary" @onclick="() => ShowAddModal()">Add Product</button>
        </div>
        <!-- Modal -->
        <AddModal @ref="addModal" OnSave="AddProduct"></AddModal>
        <ProductTable @ref="productTable"></ProductTable>

        <!-- Button to Open Modal -->
        @code {
        public ProductTable productTable = new();
        public AddModal addModal = new();
        private async void ShowAddModal()
        {
            await JSRuntime.InvokeVoidAsync("showModal", "addProductModal");
        }

        private async Task AddProduct()
        {
            await JSRuntime.InvokeVoidAsync("hideModal", "addProductModal");

            var response = await productService.AddProduct(addModal.product);

            await productTable.LoadData(1);
        }
        }

    </Authorized>
    <NotAuthorized>
        403
    </NotAuthorized>
</AuthorizeView>
